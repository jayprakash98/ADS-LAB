package com.jay.linkedList;

public class LL {
    private Node head;
    private Node tail;
    private int size;
    public LL(){
        this.size=0;
    }

    private class Node {
        private int value;
        private Node next;

        public Node(int value){
            this.value=value;
        }
        public Node(int value,Node next){
            this.value=value;
            this.next=next;
        }

    }

    public void insertFirst(int value){
        Node node=new Node(value);
        node.next=head;
        head=node;
        if(tail==null){
            tail=head;
        }
        size++;
    }

    public void insertLast(int value){
        if(tail==null){
            insertFirst(value);
        }
        Node node=new Node(value);
        tail.next=node;
        tail=node;
        size++;

    }

    public void insetIndex(int value,int index){
        if(index==0){
            insertFirst(value);
        }
        if(index==size){
            insertLast(value);
        }
        Node temp=head;
        for (int index1 = 1; index1 <index ; index1++) {
            temp=temp.next;
        }
        temp.next= new Node(value,temp.next);
        size++;
    }
    public int deleteHead(){
        int val=head.value;
        head=head.next;
        if(head==null){
            tail=null;
        }
        size--;
        return val;

    }

    public int deleteTail(){
        if(size<=1){
            return deleteHead();
        }
        Node secondLast=get(size-2);
        int val=tail.value;
        tail=secondLast;
        tail.next=null;
        return val;
    }
    public int deleteIndex(int index){
        Node prev=get(index-1);
        int val=prev.next.value;
        prev.next=prev.next.next;
        return val;

    }

    public Node get(int index1){
        Node node =head;
        for (int index= 0; index < index1; index++) {
            node = node.next;
        }
        return node;

    }

    public void display(){
        Node temp=head;
        while(temp!=null){
            System.out.print(temp.value+"->");
            temp=temp.next;
        }
        System.out.println("end");
    }




}
